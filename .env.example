# SVG2IMG 环境变量配置示例
# 复制此文件为 .env 并根据需要修改配置

# ==========================================
# Browserless 配置
# ==========================================

# 是否使用自建 Browserless 服务 (true/false)
USE_SELF_HOSTED=false

# 自建 Browserless 服务地址 (当 USE_SELF_HOSTED=true 时使用)
BROWSERLESS_SELF_HOSTED_URL=ws://localhost:3000

# 云端 Browserless 服务地址
BROWSERLESS_CLOUD_URL=wss://production-sfo.browserless.io

# Browserless 服务 Token (云端服务必需)
# 注册地址: https://browserless.io
# 支持多个 token，使用逗号分隔: token1,token2,token3
BROWSERLESS_TOKEN=your-browserless-token-here

# ==========================================
# 默认参数配置
# ==========================================

# 默认输出格式 (png/jpg/jpeg/webp/pdf)
DEFAULT_FORMAT=png

# 默认缩放比例 (0.1-10)
DEFAULT_SCALE=1

# 默认图片质量 (1-100，仅对 jpg/webp 有效)
DEFAULT_QUALITY=90

# 默认背景色 (CSS 颜色格式，如 #ffffff, transparent, red)
DEFAULT_BACKGROUND_COLOR=#ffffff

# 默认等待时间 (毫秒，用于等待 SVG 中的字体/样式加载)
DEFAULT_WAIT_FOR=1000

# 默认返回方式 (binary/url)
DEFAULT_RETURN_TYPE=binary

# 默认 URL 有效期 (秒，仅在 return_type=url 时使用)
DEFAULT_URL_EXPIRY=3600

# ==========================================
# 限制参数配置
# ==========================================

# 最大输出宽度 (像素)
MAX_WIDTH=2048

# 最大输出高度 (像素)
MAX_HEIGHT=2048

# 最大 SVG 内容大小 (字节)
MAX_SVG_SIZE=1048576

# 请求超时时间 (毫秒)
TIMEOUT=30000

# ==========================================
# 安全配置
# ==========================================

# 允许的 SVG 来源域名 (逗号分隔，留空表示允许所有)
# 示例: example.com,trusted-site.com,cdn.jsdelivr.net
ALLOWED_DOMAINS=

# 阻止的 SVG 来源域名 (逗号分隔)
BLOCKED_DOMAINS=localhost,127.0.0.1,0.0.0.0,10.0.0.0,192.168.0.0

# ==========================================
# 服务器配置
# ==========================================

# HTTP 服务端口
PORT=8000

# ==========================================
# Supabase Storage 配置 (用于 URL 返回模式)
# ==========================================

# Supabase 项目 URL
SUPABASE_URL=https://your-project.supabase.co

# Supabase 匿名密钥 (anon key)
SUPABASE_ANON_KEY=your-supabase-anon-key

# 存储桶名称
SUPABASE_STORAGE_BUCKET=svg-images

# ==========================================
# 部署平台特定配置
# ==========================================

# Deno Deploy 配置
# 在 Deno Deploy 控制台中设置以上环境变量

# Supabase Edge Functions 配置
# 在 Supabase 项目设置中添加环境变量，或在 config.ts 的 overrides 中直接设置

# Vercel 配置
# 在 Vercel 项目设置中添加环境变量

# Railway 配置
# 在 Railway 项目中添加环境变量

# ==========================================
# 开发环境配置建议
# ==========================================

# 本地开发时，推荐使用自建 Browserless:
# USE_SELF_HOSTED=true
# BROWSERLESS_SELF_HOSTED_URL=ws://localhost:3000

# 生产环境时，推荐使用云端 Browserless:
# USE_SELF_HOSTED=false
# BROWSERLESS_TOKEN=your-real-token

# ==========================================
# Docker 部署示例
# ==========================================

# 启动 Browserless 容器:
# docker run -d -p 3000:3000 --name browserless ghcr.io/browserless/chrome

# 使用 docker-compose:
# version: '3.8'
# services:
#   browserless:
#     image: ghcr.io/browserless/chrome
#     ports:
#       - "3000:3000"
#     environment:
#       - CONCURRENT=10
#       - TOKEN=your-secret-token
#   
#   svg2img:
#     build: .
#     ports:
#       - "8000:8000"
#     environment:
#       - USE_SELF_HOSTED=true
#       - BROWSERLESS_SELF_HOSTED_URL=ws://browserless:3000
#     depends_on:
#       - browserless
